[{"/home/thanh86/python/ZALO/fastapi-reactjs/client/src/index.js":"1","/home/thanh86/python/ZALO/fastapi-reactjs/client/src/reportWebVitals.js":"2","/home/thanh86/python/ZALO/fastapi-reactjs/client/src/App1.js":"3","/home/thanh86/python/ZALO/fastapi-reactjs/client/src/App.js":"4","/home/thanh86/python/ZALO/fastapi-reactjs/client/src/components/Chatbot/Chatbot.js":"5","/home/thanh86/python/ZALO/fastapi-reactjs/client/src/components/ImageObjectDetection/ImageObjectDetection.js":"6","/home/thanh86/python/ZALO/fastapi-reactjs/client/src/components/HomePage/HomePage.js":"7"},{"size":628,"mtime":1667230475382,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1667224805016,"results":"10","hashOfConfig":"9"},{"size":3875,"mtime":1667226826851,"results":"11","hashOfConfig":"9"},{"size":894,"mtime":1667231008262,"results":"12","hashOfConfig":"9"},{"size":4886,"mtime":1667231529470,"results":"13","hashOfConfig":"9"},{"size":3950,"mtime":1667231031293,"results":"14","hashOfConfig":"9"},{"size":157,"mtime":1667230992378,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pyg8jh",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/thanh86/python/ZALO/fastapi-reactjs/client/src/index.js",[],[],"/home/thanh86/python/ZALO/fastapi-reactjs/client/src/reportWebVitals.js",[],[],"/home/thanh86/python/ZALO/fastapi-reactjs/client/src/App1.js",[],["39","40","41"],"/home/thanh86/python/ZALO/fastapi-reactjs/client/src/App.js",[],[],"/home/thanh86/python/ZALO/fastapi-reactjs/client/src/components/Chatbot/Chatbot.js",["42"],[],"import \"./chatBot.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { BiBot, BiUser } from \"react-icons/bi\";\nimport { axios } from \"axios\";\n\nfunction UIChatbot() {\n  const [chat, setChat] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [botTyping, setbotTyping] = useState(false);\n\n  useEffect(() => {\n    console.log(\"called\");\n    const objDiv = document.getElementById(\"messageArea\");\n    objDiv.scrollTop = objDiv.scrollHeight;\n  }, [chat]);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    const name = \"Thành Nè\";\n    const request_temp = { sender: \"user\", sender_id: name, msg: inputMessage };\n\n    if (inputMessage !== \"\") {\n      setChat((chat) => [...chat, request_temp]);\n      setbotTyping(true);\n      setInputMessage(\"\");\n      rasaAPI(name, inputMessage);\n    } else {\n      window.alert(\"Please enter valid message\");\n    }\n  };\n\n  const rasaAPI = async function handleClick(name, msg) {\n    //chatData.push({sender : \"user\", sender_id : name, msg : msg});\n\n    // em có sài axios bên ImageObjectDetect tương tự như bên này anh xem thử\n    // cái này em viết bằng cách truyền thống sài jquery thôi\n    await fetch(\"http://localhost:5055/webhooks/rest/webhook\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        charset: \"UTF-8\",\n      },\n\n      credentials: \"same-origin\",\n      body: JSON.stringify({ sender: name, message: msg }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          const temp = response[0];\n          const recipient_id = temp[\"recipient_id\"];\n          const recipient_msg = temp[\"text\"];\n\n          const response_temp = {\n            sender: \"bot\",\n            recipient_id: recipient_id,\n            msg: recipient_msg,\n          };\n          setbotTyping(false);\n\n          setChat((chat) => [...chat, response_temp]);\n          // scrollBottom();\n        }\n      });\n  };\n\n  console.log(chat);\n\n  const stylecard = {\n    maxWidth: \"35rem\",\n    border: \"1px solid black\",\n    paddingLeft: \"0px\",\n    paddingRight: \"0px\",\n    borderRadius: \"30px\",\n    boxShadow: \"0 16px 20px 0 rgba(0,0,0,0.4)\",\n  };\n  const styleHeader = {\n    height: \"4.5rem\",\n    borderBottom: \"1px solid black\",\n    borderRadius: \"30px 30px 0px 0px\",\n    backgroundColor: \"#8012c4\",\n  };\n  const styleFooter = {\n    //maxWidth : '32rem',\n    borderTop: \"1px solid black\",\n    borderRadius: \"0px 0px 30px 30px\",\n    backgroundColor: \"#8012c4\",\n  };\n  const styleBody = {\n    paddingTop: \"10px\",\n    height: \"28rem\",\n    overflowY: \"a\",\n    overflowX: \"hidden\",\n  };\n\n  return (\n    <div>\n      {/* <button onClick={()=>rasaAPI(\"shreyas\",\"hi\")}>Try this</button> */}\n\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"card\" style={stylecard}>\n            <div className=\"cardHeader text-white\" style={styleHeader}>\n              <h1 style={{ marginBottom: \"0px\" }}>Rasa Bot</h1>\n              {botTyping ? <h6>Bot Typing....</h6> : null}\n            </div>\n\n            <div className=\"cardBody\" id=\"messageArea\" style={styleBody}>\n              <div className=\"row msgarea\">\n                {chat.map((user, key) => (\n                  <div key={key}>\n                    {user.sender === \"bot\" ? (\n                      <div className=\"msgalignstart\">\n                        <BiBot className=\"botIcon\" />\n                        <h5 className=\"botmsg\">{user.msg}</h5>\n                      </div>\n                    ) : (\n                      <div className=\"msgalignend\">\n                        <h5 className=\"usermsg\">{user.msg}</h5>\n                        <BiUser className=\"userIcon\" />\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"cardFooter text-white\" style={styleFooter}>\n              <div className=\"row\">\n                <form style={{ display: \"flex\" }} onSubmit={handleSubmit}>\n                  <div className=\"col-10\" style={{ paddingRight: \"0px\" }}>\n                    <input\n                      onChange={(e) => setInputMessage(e.target.value)}\n                      value={inputMessage}\n                      type=\"text\"\n                      className=\"msginp\"\n                    ></input>\n                  </div>\n                  <div className=\"col-2 cola\">\n                    <button type=\"submit\" className=\"circleBtn\">\n                      <IoMdSend className=\"sendBtn\" />\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UIChatbot;\n","/home/thanh86/python/ZALO/fastapi-reactjs/client/src/components/ImageObjectDetection/ImageObjectDetection.js",["43"],["44","45","46"],"import ImageObjectDetectionCss from './ImageObjectDetection.css';\n\nimport axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\n\nfunction ImageObjectDetection() {\n  // const [url, setUrl] = useState();\n  const [image, setImage] = useState();\n  const [result, setResult] = useState([]);\n  const [imgW, setImgW] = useState(1000);\n  const [imgH, setImgH] = useState(1000);\n  \n  const canvas_ref = useRef();\n\n  const img = new Image();\n\n  useEffect(() => {\n    call_api(image);\n    \n    img.addEventListener(\"load\", loadImage)\n\n    // Cleanup event\n    return () => {\n      img.removeEventListener(\"load\", loadImage);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [image])\n\n  useEffect(() => {\n    // const c = document.getElementById(\"canvas-img\");\n    const c = canvas_ref.current;\n    \n    c.width = c.clientWidth;\n    c.height = c.clientHeight;\n\n    const ctx = c.getContext(\"2d\");\n    if (result.length === 0) return\n    // Why call 3 times???\n    console.log(\"ctx: \", ctx);\n\n    // load img and drawing box\n    const onLoad = () => {\n      var scale = Math.min(c.width / imgW, c.height / imgH);\n      var x = (c.width / 2) - (imgW / 2) * scale;\n      var y = (c.height / 2) - (imgH / 2) * scale;\n      ctx.drawImage(img, x, y, imgW * scale, imgH * scale);\n\n      if (result) {\n        // // draw box\n\n        // Drawing box\n        var boxs = result.data.result\n        console.log(boxs);\n\n        // DRAW\n        ctx.beginPath();\n\n        // eslint-disable-next-line array-callback-return\n        boxs.map(box => {\n          ctx.strokeStyle = 'red';\n          ctx.lineWidth = 1;\n          \n          // ctx.rect(x + box.xmin * scale, y + box.ymin * scale, (box.xmax - box.xmin) * scale, (box.ymax - box.ymin) * scale);\n          ctx.moveTo(x + box.xmin * scale, y + box.ymin * scale);\n          ctx.lineTo(x + box.xmax * scale, y + box.ymin * scale);\n          ctx.lineTo(x + box.xmax * scale, y + box.ymax * scale);\n          ctx.lineTo(x + box.xmin * scale, y + box.ymax * scale);\n          ctx.lineTo(x + box.xmin * scale, y + box.ymin * scale);\n        })\n\n        ctx.stroke();\n        console.log(\"DRAWED\");\n      }\n    }\n\n    img.addEventListener(\"load\", onLoad)\n    img.src = image.url;\n    // // initial and getsize image\n\n\n    // Cleanup event and fill canvas\n    return () => {\n      img.removeEventListener(\"load\", onLoad)\n      ctx.beginPath();\n      ctx.rect(0, 0, c.width, c.height);\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fill();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [result, image])\n\n\n  /* This useEffect's used when remove url after upload new image  */\n  // useEffect(() => {\n  //   // Cleanup\n  //   return () => {\n  //     image && URL.revokeObjectURL(image.url);\n  //   }\n  // }, [image])\n\n  function handleChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      file.url = URL.createObjectURL(file);\n      setImage(file);\n    }\n  }\n\n  function onPredict(event) {\n    console.log(\"Result onPredict: \", result);\n  }\n\n  const call_api = async (image) => {\n    // call api\n    const formData = new FormData();\n\n    if (image) {\n      formData.append(\n        'image',\n        image,\n        image.name\n      )\n\n      const url = \"http://127.0.0.1:8000/objectdetection\";\n      const data = await axios.post(url, formData); // using with await\n      setResult(data);\n      console.log(\"Called API\");\n    }\n  }\n\n  const loadImage = () => {\n    setImgH(img.height);\n    setImgW(img.width);\n  }\n\n  return (\n    <div className=\"App\">\n      <input id=\"imgInp\" accept=\"image/*\" type=\"file\" onChange={handleChange} />\n      <p />\n      <button onClick={onPredict}>Predict Vô Console coi result thôi nhé các anh =]]]!</button>\n      <p />\n\n      <canvas\n        id=\"canvas-img\"\n        style={{ width: \"100vw\", height: \"80vh\" }}\n        ref = {canvas_ref}\n      />\n\n    </div>\n  );\n}\n\nexport default ImageObjectDetection;\n","/home/thanh86/python/ZALO/fastapi-reactjs/client/src/components/HomePage/HomePage.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":26,"column":6,"nodeType":"49","endLine":26,"endColumn":13,"suggestions":"50","suppressions":"51"},{"ruleId":"52","severity":1,"message":"53","line":58,"column":22,"nodeType":"54","messageId":"55","endLine":58,"endColumn":24,"suppressions":"56"},{"ruleId":"47","severity":1,"message":"57","line":89,"column":6,"nodeType":"49","endLine":89,"endColumn":21,"suggestions":"58","suppressions":"59"},{"ruleId":"60","severity":1,"message":"61","line":5,"column":10,"nodeType":"62","messageId":"63","endLine":5,"endColumn":15},{"ruleId":"60","severity":1,"message":"64","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":31},{"ruleId":"47","severity":1,"message":"48","line":28,"column":6,"nodeType":"49","endLine":28,"endColumn":13,"suggestions":"65","suppressions":"66"},{"ruleId":"52","severity":1,"message":"53","line":60,"column":22,"nodeType":"54","messageId":"55","endLine":60,"endColumn":24,"suppressions":"67"},{"ruleId":"47","severity":1,"message":"57","line":91,"column":6,"nodeType":"49","endLine":91,"endColumn":21,"suggestions":"68","suppressions":"69"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'img' and 'loadImage'. Either include them or remove the dependency array.","ArrayExpression",["70"],["71"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["72"],"React Hook useEffect has missing dependencies: 'img', 'imgH', and 'imgW'. Either include them or remove the dependency array.",["73"],["74"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'ImageObjectDetectionCss' is defined but never used.",["75"],["76"],["77"],["78"],["79"],{"desc":"80","fix":"81"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},{"desc":"84","fix":"85"},{"kind":"82","justification":"83"},{"desc":"80","fix":"86"},{"kind":"82","justification":"83"},{"kind":"82","justification":"83"},{"desc":"84","fix":"87"},{"kind":"82","justification":"83"},"Update the dependencies array to be: [image, img, loadImage]",{"range":"88","text":"89"},"directive","","Update the dependencies array to be: [result, image, img, imgW, imgH]",{"range":"90","text":"91"},{"range":"92","text":"89"},{"range":"93","text":"91"},[628,635],"[image, img, loadImage]",[2492,2507],"[result, image, img, imgW, imgH]",[712,719],[2576,2591]]